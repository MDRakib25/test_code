# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  name: 'Default'  # Replace with your self-hosted agent name

variables:
  buildConfiguration: 'Release'

steps:
# ✅ Use .NET 8 SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

# ✅ Restore & Build with analyzers
- script: |
    dotnet restore
    dotnet build --no-incremental --configuration $(buildConfiguration) -warnaserror
  displayName: 'Build the project with analyzers'

# ✅ Run Unit Tests + Collect Code Coverage (Single line for Windows compatibility)
- script: dotnet test md_quiz4_dotnet.Tests/md_quiz4_dotnet.Tests.csproj --configuration $(buildConfiguration) --collect:"XPlat Code Coverage" --results-directory $(Build.ArtifactStagingDirectory)/TestResults
  displayName: 'Run Unit Tests + Collect Coverage'

# ✅ Publish Test Results (.trx)
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(Build.ArtifactStagingDirectory)/TestResults/*.trx'
    testRunTitle: 'Unit Test Results'

# ✅ Publish Code Coverage (.cobertura.xml)
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.ArtifactStagingDirectory)/TestResults/**/coverage.cobertura.xml'
    reportDirectory: '$(Build.ArtifactStagingDirectory)/TestResults'

# ✅ Publish the Web App Project
- script: dotnet publish md_quiz4_dotnet/md_quiz4_dotnet.csproj -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
  displayName: 'Publish the project'

# ✅ Upload the Build Artifact
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'mvc_app'
    publishLocation: 'Container'
